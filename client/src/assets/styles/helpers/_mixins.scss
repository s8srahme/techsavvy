@mixin font($size: false, $weight: false, $style: false, $color: false, $lh: false, $ls: false) {
	font-family: $font-family-dosis;
	@if $size {
		font-size: $size;
	}
	@if $weight {
		font-weight: $weight;
	}
	@if $style {
		font-style: $style;
	}
	@if $color {
		color: $color;
	}
	@if $lh {
		line-height: $lh;
	}
	@if $ls {
		letter-spacing: $ls;
	}
}

@mixin breakpoint($min: 0, $max: 0) {
	$type: type-of($min);

	@if $type == string {
		@if $min == xs {
			@media (max-width: $breakpoint-sm - 1) {
				@content;
			}
		} @else if $min == sm {
			@media (min-width: $breakpoint-sm) {
				@content;
			}
		} @else if $min == md {
			@media (min-width: $breakpoint-md) {
				@content;
			}
		} @else if $min == lg {
			@media (min-width: $breakpoint-lg) {
				@content;
			}
		} @else if $min == xl {
			@media (min-width: $breakpoint-xl) {
				@content;
			}
		} @else {
			// @warn "Breakpoint mixin supports: sm, md, lg, xl";
			@warn "Unfortunately, no value could be retrieved from `#{$min}`. "+"Please make sure it is defined in `$breakpoints` map.";
		}
	} @else if $type == number {
		$query: "all" !default;
		@if $min != 0 and $max != 0 {
			$query: "(min-width: #{$min}) and (max-width: #{$max - 1})";
		} @else if $min != 0 and $max == 0 {
			$query: "(min-width: #{$min})";
		} @else if $min == 0 and $max != 0 {
			$query: "(max-width: #{$max - 1})";
		}
		@media #{$query} {
			@content;
		}
	}
}

@mixin box-shadow($class) {
	@if $class == top {
		box-shadow: 0 -5px 5px -5px $color-medium-gray;
	} @else if $class == right {
		box-shadow: 5px 0 5px -5px $color-medium-gray;
	} @else if $class == bottom {
		box-shadow: 0 5px 5px -5px $color-medium-gray;
	} @else if $class == left {
		box-shadow: -5px 0 5px -5px $color-medium-gray;
	} @else {
		box-shadow: 0 0 5px $color-medium-gray;
	}
}

@mixin transition($args...) {
	transition: $args;
}
